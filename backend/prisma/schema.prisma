generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  username     String     @unique
  passwordHash String
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  permissions  UserPermission[]
  auditLogs    AuditLog[]
  importJobs   ImportJob[]
  requests     Request[]
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String
  users       User[]
  permissions RolePermission[]
}

model Permission {
  id          Int      @id @default(autoincrement())
  code        String   @unique
  description String
  roleLinks   RolePermission[]
  userLinks   UserPermission[]
}

model RolePermission {
  id           Int         @id @default(autoincrement())
  role         Role        @relation(fields: [roleId], references: [id])
  roleId       Int
  permission   Permission  @relation(fields: [permissionId], references: [id])
  permissionId Int
}

model UserPermission {
  id           Int         @id @default(autoincrement())
  user         User        @relation(fields: [userId], references: [id])
  userId       Int
  permission   Permission  @relation(fields: [permissionId], references: [id])
  permissionId Int
}

model Brand {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  flavors Flavor[]
}

model Flavor {
  id          Int      @id @default(autoincrement())
  brand       Brand    @relation(fields: [brandId], references: [id])
  brandId     Int
  name        String
  description String?
  profile     String?
  stocks      Stock[]
  requests    Request[]
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  entity    String
  entityId  Int
  action    String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  timestamp DateTime @default(now())
  details   Json
}

model Stock {
  id        Int    @id @default(autoincrement())
  flavor    Flavor @relation(fields: [flavorId], references: [id])
  flavorId  Int
  quantity  Int
}

model ImportJob {
  id           Int      @id @default(autoincrement())
  entityType   String
  filename     String
  uploadedBy   User     @relation(fields: [uploadedById], references: [id])
  uploadedById Int
  status       String   @default("pending")
  errors       Json?
  createdAt    DateTime @default(now())
}

model Request {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  flavor    Flavor   @relation(fields: [flavorId], references: [id])
  flavorId  Int
  quantity  Int
  status    String   @default("pending")
  createdAt DateTime @default(now())
}
